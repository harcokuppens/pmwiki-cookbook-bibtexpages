#!/usr/bin/env bash

# This script uses 'envsubst'
#  - for macos(using brew)/linux(using apt) install gettext package
#  - for windows install "Git for Windows"  which comes with a bash
#    shell which you can run by running the program "Git Bash".
#    This "Git Bash" shell has by default 'evnsubst' installed.

SEND_TO_STDOUT="true"
if [[ "$1" == "-O" ]]; then
    SEND_TO_STDOUT="false"
    shift
fi

if [[ "$#" != "2" ]]; then
    echo "USAGE: filltemplate [-O] CONFIGFILE TEMPLATEFILE"
    echo ""
    echo "By default output is send to stdout, but with option -O output is"
    echo "send to file next to TEMPLATEFILE with '.tpl' extension removed."
    exit 1
fi

CONFIGFILE="$1"
TEMPLATEFILE="$2"

if [[ ! -r "$TEMPLATEFILE" ]]; then
    echo "ERROR: cannot read  template file '$TEMPLATEFILE'"
    exit 1
fi

if [ ! "${TEMPLATEFILE: -4}" == ".tpl" ]; then
    echo "ERROR: template file '$TEMPLATEFILE' does not have extension '.tpl'"
    exit 1
fi

OUTPUTFILE=${TEMPLATEFILE%.tpl}

if [[ ! -r "$CONFIGFILE" ]]; then
    echo "ERROR: cannot read  template file '$CONFIGFILE'"
    exit 1
fi

if [ ! "${CONFIGFILE: -5}" == ".bash" ]; then
    echo "ERROR: config file '$CONFIGFILE' does not have extension '.bash'"
    exit 1
fi

cmdpath=$(command -v envsubst)
if [[ ! -x "$cmdpath" ]]; then
    echo "ERROR: missing required executable '/usr/bin/envsubst'."
    exit 1
fi

# shellcheck disable=SC1090
source "$CONFIGFILE"
# shellcheck disable=SC2046
vars=$(printf '${%s} ' $(grep "export" "$CONFIGFILE" | grep '=' | cut -d'=' -f1 | sed 's/\s*export\s*//i'))
if [[ "$SEND_TO_STDOUT" == "true" ]]; then
    envsubst "$vars" <"$TEMPLATEFILE"
else
    envsubst "$vars" <"$TEMPLATEFILE" >"$OUTPUTFILE"
fi
